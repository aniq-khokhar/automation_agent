from apify_client import ApifyClient
import os
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("APIFY_API_TOKEN")
client = ApifyClient(API_TOKEN)

def yt_scrapper(s_term: str, sorting: str, short_c: int = 2)-> list[dict]:
    """
    Scrapes YouTube videos using Apify Actor.

    Args:
        s_term (str): Search term to find videos.
        short_c (int): Number of shorts to fetch.
        sorting (str): Sort videos by criteria (e.g., "POPULAR", "RELEVANCE").

    Returns:
        list: A list of scraped video data.
    """


    run_input = {
        "downloadSubtitles": False,
        "hasCC": False,
        "hasLocation": False,
        "hasSubtitles": False,
        "is360": False,
        "is3D": False,
        "is4K": False,
        "isBought": False,
        "isHD": False,
        "isHDR": False,
        "isLive": False,
        "isVR180": False,
        "maxResultStreams": 0,
        "maxResults": 0,
        "maxResultsShorts": short_c,
        "preferAutoGeneratedSubtitles": False,
        "saveSubsToKVS": False,
        "searchQueries": [s_term],
        "sortVideosBy": sorting
    }

    run = client.actor("h7sDV53CddomktSi5").call(run_input=run_input)

    results = []
    for item in client.dataset(run["defaultDatasetId"]).iterate_items():
        results.append({
            "title": item.get("title"),
            "url": item.get("url"),
            "viewCount": item.get("viewCount")
        })

    return results



# # Example usage/
# if __name__ == "__main__":
#     data = yt_scrapper("Gaming", "POPULAR" , 2)
#     for video in data:
#         print(video)
